#include <iostream>
#include<ctime>
using namespace std;
 int pc,pr;
class Maze{
   // private:
   public:
   int arr[5][5]={0};
   int c3,r3;
   int c4,r4;
    //public:
        void obstacal();
        void player();
        void display();
        void move_player(int x, int y);
        bool gameend(int x, int y);
        bool nott(int x, int y);
};
int main(){
    Maze a1;
         a1.obstacal();
         a1.player();
         a1.display();
         while(1){
            string s;
            cin>>s;
             pc=a1.c3;
             pr=a1.r3;
            if(s=="up"){

                    if(a1.nott(a1.c3-1,a1.r3) ){
                            cout<<"Please make wright move"<<endl;
                            continue;
                    }
                    a1.c3--;
            }
            else if(s=="down"){
                    if(a1.nott(a1.c3+1,a1.r3) ){
                            cout<<"Please make wright move"<<endl;
                            continue;
                    }
                    a1.c3++;
            }
            else if(s=="left"){
                    if(a1.nott(a1.c3,a1.r3-1) ){
                            cout<<"Please make wright move"<<endl;
                            continue;
                    }
                    a1.r3--;
            }
            else if(s=="right"){
                    if(a1.nott(a1.c3,a1.r3+1) ){
                            cout<<"Please make wright move"<<endl;
                            continue;
                    }
                    a1.r3++;
            }
            else{
               cout<<"WRONG INPUT"<<endl;
               continue;
            }
            a1.move_player(a1.c3,a1.r3);
            a1.display();
            if(a1.gameend(a1.c3,a1.r3)){
                  cout<<"Congratulations! You've escaped the maze!"<<endl;
                  break;
            }
         }
    return 0;
}
void Maze::obstacal(){
srand(time(0));
for(int i=0;i<4;i++){
    while(1){

        int a=rand()%4;
        int b=rand()%4;
        if(arr[a][b]==0){
                arr[a][b]=1;
                break;
        }
    }
}
}
void Maze::player(){
     srand(time(0));
  for(int i=0;i<2;i++){
    while(1){

         int a=rand()%4;
        int b=rand()%4;
        if(arr[a][b]==0){
                arr[a][b]=i+3;
                if(i==0){
                    c3=a;r3=b;
                }
                else {
                    c4=a;r4=b;
                }
                break;

        }
    }
  }
}
void Maze::display(){
  for(int i=0;i<5;i++){
    for(int j=0;j<5;j++){
        cout<<arr[i][j]<<" ";
    }
    cout<<endl;
  }
}
void Maze::move_player(int x, int y){
    if(arr[x][y]==4){
        arr[pc][pr]=0;
        //continue;
    }else{
    arr[pc][pr]=0;
    arr[x][y]=3;
    }
}
bool Maze::gameend(int x, int y){
 if(arr[x][y]==4){

    return true;
 }
 return false ;

}
  bool Maze::nott(int x, int y){
      if(x<0 || x>4 || y<0 || y>4 || arr[x][y]==1)return true;
        return false;
    }



